<?xml version="1.0" encoding="utf-8"?>
<topic id="bd99e66d-09ef-4adc-89eb-db2aaf89e8ad" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        KaosCollections is a .NET library that provides generic collection classes
        for storing elements that are both sorted and indexed.
        By using an advanced underlying data structure, these classes provide
        superior performance to their Microsoft Base Class Library (BCL) counterparts
        while delivering greatly enhanced capability.
      </para>
      <para>
        The primary classes provided are:
      </para>
      <list class="bullet">
        <listItem>
          <para>
            <codeEntityReference qualifyHint="false">T:Kaos.Collections.RankedDictionary`2</codeEntityReference>-
            for collections of key/value pairs with distinct keys that can be accessed in sort order or by index.
          </para>
        </listItem>
        <listItem>
          <para>
            <codeEntityReference qualifyHint="false">T:Kaos.Collections.RankedSet`1</codeEntityReference>-
            for collections of distinct items that can be accessed in sort order or by index.
          </para>
        </listItem>
        <listItem>
          <para>
            <codeEntityReference qualifyHint="false">T:Kaos.Collections.RankedBag`1</codeEntityReference>-
            for collections of items that can be accessed in sort order or by index. Also known as multisets.
          </para>
        </listItem>
      </list>
      <para>
        Both <codeInline>RankedDictionary</codeInline> and <codeInline>RankedSet</codeInline> closely emulate the API of their BCL counterparts
        (<codeEntityReference qualifyHint="false">T:System.Collections.Generic.SortedDictionary`2</codeEntityReference> and
        <codeEntityReference qualifyHint="false">T:System.Collections.Generic.SortedSet`1</codeEntityReference>)
        while <codeInline>RankedBag</codeInline> has no BCL counterpart.
        All three classes include indexing capabilities such as determining the index of an element or getting elements by index.
      </para>
      <para>
        This library is built as a .NET Standard project with multitargeting to:
      </para>
      <list class="bullet">
        <listItem>
          <para>
            .NETStandard 1.0.
            Use this for any .NET Core application.
            This target does not include binary serialization support.
          </para>
        </listItem>
        <listItem>
          <para>
            Full .NET Framework 4.5. This target implements the full API.
          </para>
        </listItem>
        <listItem>
          <para>
            Full .NET Framework 4.0.
            This target does not include <codeInline>IReadOnlyDictionary</codeInline> or <codeInline>IReadOnlyCollection</codeInline> implementation.
          </para>
        </listItem>
        <listItem>
          <para>
            Full .NET Framework 3.5.
            This target does not include <codeInline>IReadOnlyDictionary</codeInline>, <codeInline>IReadOnlyCollection</codeInline> implementation.
            It does not derive from <codeInline>ISet</codeInline> but does implement its members.
          </para>
        </listItem>
      </list>
    </introduction>

    <section>
      <title>Library download and installation</title>
      <content>
        <para>
          KaosCollections may be installed in Visual Studio via NuGet:
        </para>
        <list class="ordered">
          <listItem>
            <para>Click <legacyBold>Manage NuGet Packages</legacyBold>.</para>
          </listItem>
          <listItem>
            <para>Select package source of <legacyBold>nuget.org</legacyBold>.</para>
          </listItem>
          <listItem>
            <para>Click <legacyBold>Browse</legacyBold> and input <legacyBold>Kaos.Collections</legacyBold>.</para>
          </listItem>
          <listItem>
            <para>
              The package should appear. Click <legacyBold>Install</legacyBold>.
              As a multitargeted package, the appropriate binary will be selected for your program.
            </para>
          </listItem>
        </list>
        <para>
          Direct downloads are also available at NuGet.org and GitHub.com.
          See the links at the bottom of this page.
          As archives, individual binaries may be extracted from the <codeInline>.nuget</codeInline> package for specific platforms.
          A project may then reference the extracted platform-specific <codeInline>.dll</codeInline> directly.
        </para>
      </content>
    </section>

    <section>
      <title>Documentation</title>
      <content>
        <para>
          Installing as a NuGet package will provide IntelliSense and object browser documentation from the <codeInline>.xml</codeInline> file.
          Complete documentation is hosted at GitHub.io
          with an offline <codeInline>.chm</codeInline> file version available for download at GitHub.com.
          See the links below.
        </para>
      </content>
    </section>

    <section>
      <title>Build environment</title>
      <content>
        <para>
          Complete source code with embedded XML documentation is hosted at GitHub.com.
          Building the solution requires Visual Studio 2017 Community Edition or greater.
          Building documentation requires Sandcastle Help File Builder.
        </para>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="90402bce-1f31-45f8-b0ea-0a73408bd45a" />
      <externalLink>
        <linkText>nuget.org/packages/Kaos.Collections</linkText>
        <linkAlternateText>download binary</linkAlternateText>
        <linkUri>https://www.nuget.org/packages/Kaos.Collections/</linkUri>
      </externalLink>
      <externalLink>
        <linkText>github.com/kaosborn/KaosCollections</linkText>
        <linkAlternateText>repository</linkAlternateText>
        <linkUri>https://github.com/kaosborn/KaosCollections/</linkUri>
      </externalLink>
      <externalLink>
        <linkText>kaosborn.github.io/help/KaosCollections</linkText>
        <linkAlternateText>online documentation</linkAlternateText>
        <linkUri>https://kaosborn.github.io/help/KaosCollections/</linkUri>
      </externalLink>
      <externalLink>
        <linkText>wikipedia.org/wiki/B+tree</linkText>
        <linkAlternateText>B+ tree</linkAlternateText>
        <linkUri>https://en.wikipedia.org/wiki/B%2Btree</linkUri>
      </externalLink>
      <externalLink>
        <linkText>wikipedia.org/wiki/Order_statistic_tree</linkText>
        <linkAlternateText>Order statistic tree</linkAlternateText>
        <linkUri>https://en.wikipedia.org/wiki/Order_statistic_tree</linkUri>
      </externalLink>
      <externalLink>
        <linkText>msdn.microsoft.com/en-us/library/system.collections.generic(v=vs.110).aspx</linkText>
        <linkAlternateText>System.Collections.Generic Namespace</linkAlternateText>
        <linkUri>https://msdn.microsoft.com/en-us/library/system.collections.generic(v=vs.110).aspx</linkUri>
      </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
